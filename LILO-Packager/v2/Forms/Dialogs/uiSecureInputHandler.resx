<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="resource.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="showPsw.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        VTwGXQ6mFQAAAABJRU5ErkJggg==
</value>
  </data>
</root>