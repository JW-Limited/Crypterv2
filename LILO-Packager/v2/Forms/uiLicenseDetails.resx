<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pnlLicense.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>